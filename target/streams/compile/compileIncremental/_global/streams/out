[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/service/ClientService.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/service/MessageQueueManager.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/protocol/Protocol.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/protocol/SocketProtocol.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/service/EventQueueManager.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/model/EventError.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/service/ClientRegistry.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/domain/DeadLetterQueue.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/listener/ClientListener.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/model/Message.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/App.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/listener/EventListener.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/router/MessageRouter.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(maze.service.MessageQueueManager, maze.protocol.SocketProtocol, maze.model.Broadcast, maze.model.EventError, maze.model.ParseError, maze.router.MessageRouter, maze.listener.ClientListener, maze.model.Unfollow, maze.service.DeadLetterQueue, maze.model.DeliveryError, maze.model.Aliases, maze.protocol.Protocol, maze.model.Message, maze.service.ClientRegistry, maze.App, maze.model.Follow, maze.model.StatusUpdate, maze.model.PrivateMessage, maze.listener.EventListener)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(maze.service.MessageQueueManager, maze.protocol.SocketProtocol, maze.model.Broadcast, maze.model.EventError, maze.model.ParseError, maze.router.MessageRouter, maze.listener.ClientListener, maze.model.Unfollow, maze.service.DeadLetterQueue, maze.model.DeliveryError, maze.model.Aliases, maze.protocol.Protocol, maze.model.Message, maze.service.ClientRegistry, maze.App, maze.model.Follow, maze.model.StatusUpdate, maze.model.PrivateMessage, maze.listener.EventListener)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/listener/ClientListener.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/protocol/SocketProtocol.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/service/EventQueueManager.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/model/EventError.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/model/Message.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/service/ClientRegistry.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/App.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/domain/DeadLetterQueue.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/listener/EventListener.scala, /Users/kayleecho/code/FollowersMazeCodingChallenge/src/main/scala/maze/router/MessageRouter.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.service.MessageQueueManager, maze.protocol.SocketProtocol, maze.model.Broadcast, maze.model.EventError, maze.model.ParseError, maze.router.MessageRouter, maze.listener.ClientListener, maze.model.Unfollow, maze.service.DeadLetterQueue, maze.model.DeliveryError, maze.model.Aliases, maze.protocol.Protocol, maze.model.Message, maze.service.ClientRegistry, maze.App, maze.model.Follow, maze.model.StatusUpdate, maze.model.PrivateMessage, maze.listener.EventListener[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.ParseError by maze.model.EventError[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.DeliveryError by maze.model.EventError[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.Follow by maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.StatusUpdate by maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.PrivateMessage by maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 12 Scala sources to /Users/kayleecho/code/FollowersMazeCodingChallenge/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 71189414 for Scala compiler version 2.13.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/kayleecho/Library/Caches/Coursier/v1/https/maven.localproxy.sc%3A42042/sc-repo/org/scala-lang/scala-library/2.13.8/scala-library-2.13.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/kayleecho/code/FollowersMazeCodingChallenge/target/scala-2.13/classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 4.739906597 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.model.Aliases...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.model.Aliases[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.model.Aliases)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.model.Aliases,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(UserId,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(EventSequence,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Aliases,[Default]), UsedName(Payload,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The maze.model.Aliases has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(UserId,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(EventSequence,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Aliases,[Default]), UsedName(Payload,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.model.Aliases)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.service.DeadLetterQueue...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.service.DeadLetterQueue[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.service.DeadLetterQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.service.DeadLetterQueue,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(hasNext,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(push,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(DeadLetterQueue,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(maze;service;DeadLetterQueue;init;,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(popAll,[Default]), UsedName(pop,[Default]))) invalidates 1 classes due to The maze.service.DeadLetterQueue has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(hasNext,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(push,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(DeadLetterQueue,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(maze;service;DeadLetterQueue;init;,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(popAll,[Default]), UsedName(pop,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.service.DeadLetterQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.service.EventQueueManager...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.service.EventQueueManager[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.service.EventQueueManager)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(push,[Default]), UsedName(EventQueueManager,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.App: Set(UsedName(EventQueueManager,[Default]), UsedName(maze;service;EventQueueManager;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.service.EventQueueManager,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(hasNext,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(push,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(EventQueueManager,[Default]), UsedName(wait,[Default]), UsedName(maze;service;EventQueueManager;init;,[Default]), UsedName(pop,[Default]))) invalidates 3 classes due to The maze.service.EventQueueManager has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(hasNext,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(push,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(EventQueueManager,[Default]), UsedName(wait,[Default]), UsedName(maze;service;EventQueueManager;init;,[Default]), UsedName(pop,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.service.EventQueueManager)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(maze.router.MessageRouter, maze.App)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.protocol.SocketProtocol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.protocol.SocketProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.protocol.SocketProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(SocketProtocol,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.service.ClientRegistry: Set(UsedName(SocketProtocol,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.listener.ClientListener: Set(UsedName(SocketProtocol,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.protocol.SocketProtocol,ModifiedNames(changes = UsedName(SocketProtocol,[Default]))) invalidates 4 classes due to The maze.protocol.SocketProtocol has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(SocketProtocol,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.protocol.SocketProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(maze.router.MessageRouter, maze.service.ClientRegistry, maze.listener.ClientListener)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.router.MessageRouter...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.router.MessageRouter[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.router.MessageRouter)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of maze.listener.EventListener. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.App: Set(UsedName(maze;router;MessageRouter;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.router.MessageRouter,ModifiedNames(changes = UsedName(maze;router;MessageRouter;init;,[Default]), UsedName(sendMessage,[Default]), UsedName(parseEvent,[Default]))) invalidates 2 classes due to The maze.router.MessageRouter has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(maze;router;MessageRouter;init;,[Default]), UsedName(sendMessage,[Default]), UsedName(parseEvent,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.router.MessageRouter)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(maze.App)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.service.MessageQueueManager...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.service.MessageQueueManager[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.service.MessageQueueManager)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.service.MessageQueueManager,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(hasNext,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(push,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(maze;service;MessageQueueManager;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(MessageQueueManager,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(pop,[Default]))) invalidates 1 classes due to The maze.service.MessageQueueManager has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(hasNext,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(push,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(maze;service;MessageQueueManager;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(MessageQueueManager,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(pop,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.service.MessageQueueManager)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.service.ClientRegistry...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.service.ClientRegistry[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.service.ClientRegistry)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(clientPool,[Default]), UsedName(withUserOnline,[Default]), UsedName(maze;service;ClientRegistry;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.App: Set(UsedName(maze;service;ClientRegistry;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.listener.ClientListener: Set(UsedName(add,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.service.ClientRegistry,ModifiedNames(changes = UsedName(withUser,[Default]), UsedName(add,[Default]), UsedName(clientPool,[Default]), UsedName(withUserOnline,[Default]), UsedName(maze;service;ClientRegistry;init;,[Default]))) invalidates 4 classes due to The maze.service.ClientRegistry has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(withUser,[Default]), UsedName(add,[Default]), UsedName(clientPool,[Default]), UsedName(withUserOnline,[Default]), UsedName(maze;service;ClientRegistry;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.service.ClientRegistry)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(maze.router.MessageRouter, maze.App, maze.listener.ClientListener)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.model.Message...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.Broadcast by maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.Unfollow by maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.Follow by maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.StatusUpdate by maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.PrivateMessage by maze.model.Message[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.model.Broadcast, maze.model.Unfollow, maze.model.Message, maze.model.Follow, maze.model.StatusUpdate, maze.model.PrivateMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(UserId,[Default]), UsedName(EventSequence,[Default]), UsedName(Message,[Default]), UsedName(Payload,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(UserId,[Default]), UsedName(EventSequence,[Default]), UsedName(Message,[Default]), UsedName(Payload,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(UserId,[Default]), UsedName(EventSequence,[Default]), UsedName(Message,[Default]), UsedName(Payload,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.service.EventQueueManager: Set(UsedName(EventSequence,[Default]), UsedName(Message,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(UserId,[Default]), UsedName(EventSequence,[Default]), UsedName(Message,[Default]), UsedName(Payload,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(UserId,[Default]), UsedName(EventSequence,[Default]), UsedName(Message,[Default]), UsedName(Payload,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(UserId,[Default]), UsedName(EventSequence,[Default]), UsedName(Message,[Default]), UsedName(Payload,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.model.Message,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(UserId,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(EventSequence,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Message,[Default]), UsedName(Payload,[Default]), UsedName(wait,[Default]))) invalidates 8 classes due to The maze.model.Message has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(UserId,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(EventSequence,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Message,[Default]), UsedName(Payload,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.model.Broadcast, maze.model.Unfollow, maze.model.Message, maze.model.Follow, maze.model.StatusUpdate, maze.model.PrivateMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(maze.router.MessageRouter, maze.service.EventQueueManager)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.model.EventError...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.model.EventError[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.ParseError by maze.model.EventError[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.model.DeliveryError by maze.model.EventError[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.model.DeliveryError, maze.model.EventError, maze.model.ParseError)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(message,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of maze.protocol.SocketProtocol. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of maze.service.ClientRegistry. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(message,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of maze.service.ClientRegistry. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(message,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.model.EventError,ModifiedNames(changes = UsedName(message,[Default]))) invalidates 4 classes due to The maze.model.EventError has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(message,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.model.DeliveryError, maze.model.EventError, maze.model.ParseError)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(maze.router.MessageRouter)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.domain.DeadLetterQueue...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.domain.DeadLetterQueue[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.domain.DeadLetterQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.router.MessageRouter: Set(UsedName(push,[Default]), UsedName(DeadLetterQueue,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.service.ClientRegistry: Set(UsedName(push,[Default]), UsedName(DeadLetterQueue,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of maze.App: Set(UsedName(DeadLetterQueue,[Default]), UsedName(maze;domain;DeadLetterQueue;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.domain.DeadLetterQueue,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(hasNext,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(push,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(DeadLetterQueue,[Default]), UsedName(notify,[Default]), UsedName(maze;domain;DeadLetterQueue;init;,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(popAll,[Default]), UsedName(pop,[Default]))) invalidates 4 classes due to The maze.domain.DeadLetterQueue has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(hasNext,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(push,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(DeadLetterQueue,[Default]), UsedName(notify,[Default]), UsedName(maze;domain;DeadLetterQueue;init;,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(popAll,[Default]), UsedName(pop,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.domain.DeadLetterQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(maze.router.MessageRouter, maze.service.ClientRegistry, maze.App)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from maze.protocol.Protocol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.protocol.Protocol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(maze.protocol.Protocol)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(maze.protocol.Protocol,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(write,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(Protocol,[Default]))) invalidates 1 classes due to The maze.protocol.Protocol has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(write,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(Protocol,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(maze.protocol.Protocol)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(maze.model.Broadcast, maze.model.ParseError, maze.listener.ClientListener, maze.model.Unfollow, maze.model.DeliveryError, maze.App, maze.model.Follow, maze.model.StatusUpdate, maze.model.PrivateMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: maze.model.Broadcast, maze.model.ParseError, maze.listener.ClientListener, maze.model.Unfollow, maze.model.DeliveryError, maze.App, maze.model.Follow, maze.model.StatusUpdate, maze.model.PrivateMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.router.MessageRouter by maze.model.Broadcast[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.listener.EventListener by maze.router.MessageRouter[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.App by maze.listener.EventListener[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.protocol.SocketProtocol by maze.model.DeliveryError[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding maze.service.ClientRegistry by maze.protocol.SocketProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(maze.protocol.SocketProtocol, maze.router.MessageRouter, maze.service.ClientRegistry)[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
